<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="imageList1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="imageList1.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAEZTeXN0ZW0uV2luZG93cy5Gb3JtcywgQ3VsdHVyZT1uZXV0cmFs
        LCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5BQEAAAAmU3lzdGVtLldpbmRvd3MuRm9ybXMu
        SW1hZ2VMaXN0U3RyZWFtZXIBAAAABERhdGEHAgIAAAAJAwAAAA8DAAAA7gkAAAJNU0Z0AUkBTAIBAQMB
        AAEYAQEBGAEBARABAAEQAQAE/wEhAQAI/wFCAU0BNgcAATYDAAEoAwABQAMAARADAAEBAQABIAYAARCa
        AAMCAQMDBQEGAwUBBgMFAQYDBQEGAwUBBgMFAQYDBQEGAwUBBgMFAQYDBQEGAwUBBgQCTQABKwGCAf8B
        AAETAWMB/wEAARMBZAH/AQABEwFnAf8BAAETAWkB/wEAARMBawH/AQABEwFsAf8BAAETAWsB/wEAARMB
        aQH/AQABEwFmAf8BAAETAWQB/wEAARYBZgH/ASMBTAGAAf5IAAMGAQgBFwGpAfMB/wElAXwB6AH/ASUB
        fAHoAf8BJQF8AegB/wElAXwB6AH/ASUBfAHoAf8BJQF8AegB/wElAXwB6AH/ASUBfAHoAf8BJQF8AegB
        /wElAXwB6AH/ASoBggHoAf8BEgGlAfEB/wQBSAABAwElAa0B/wIHAawB/wIHAboB/wIHAcsB/wIHAdgB
        /wIHAd8B/wIHAeEB/wIHAd8B/wIHAdYB/wIIAckB/wIIAbgB/wIGAakB/wEAARQBaAH/SAADCQEMAYsB
        3QH5Af8BAAHiAv8BAAHmAv8BAAHpAv8BAAHrAv8BAAHsAv8BAAHrAv8BAAHpAv8BAAHmAv8BAAHiAv8B
        AAHeAv8BAAHZAv8BDgF5AegB/wQCSAABBAEgAbAB/wIIAbgB/wIIAc0B/wIHAd8B/wIGAeYB/wIFAfQB
        /wIEAfcB/wIFAfMB/wIGAeEB/wIHAd4B/wIIAcoB/wIIAbcB/wEAAQ8BZgH/HAABIgFMASIB/wEYAewB
        ZwH/KAABYAJkAdsBAAHlAv8BAAHqAv8BAAHvAv8BAAH0Av8BAAH8Av8BFwFRAeIB/wEAAfcC/wEAAfIC
        /wEAAewC/wEAAecC/wEAAeIC/wNGAX9MAAEFAR0BsgH/AggBwgH/AggB1wH/AiEBxQH/A+YB/wIEAekB
        /wIDAf4B/wICAbkB/wPmAf8CBgHRAf8CCAHUAf8CCAG+Af8BAAEOAWkB/xgAASgBWgEoAf8BEQHRAVQB
        /wESAdUBVQH/AR4B0gFjAf8kAAMKAQ0BPAGsAfEB/wEAAeQC/wEAAekC/wEAAe4C/wEAAfUC/wEWAU8B
        2wH/AQAB9QL/AQAB8QL/AQAB7QL/AQAB6QL/AQEBiAHrAf8DAwEETAABBQEbAbEB/wIIAcIB/wIHAcoB
        /wPqAf8D6gH/A+oB/wIBAZIB/wPqAf8D6gH/A+oB/wIIAdIB/wIIAcAB/wEAAQwBawH/FAABLgFoAS4B
        /wEOAbIBRAH/AQ8BvAFJAf8BDwG+AUoB/wEPAbgBRwH/ASIBuwFgAf8kAANVAa8BAAHZAv8BAAHdAv8B
        AAHhAv8BAQHjAv8BAAHxAv8BAAHmAv8BAAHlAv8BAAHkAv8BBAHiAv8DPgFqUAABBAEXAa0B/wIIAbwB
        /wIIAc8B/wIFAb4B/wPuAf8D7gH/A+4B/wPuAf8D7gH/AgcB1wH/AggBzQH/AggBugH/AQABCgFsAf8Q
        AAEwAXUBMAH/AUUBtgFhAf8BRgG+AWUB/wFHAcIBZwH/AVoB0gGUAf8BRgHBAWYB/wFNAb4BagH/ATkB
        rQFpAf8gAAMGAQgBEgGqAfIB/wEAAc8C/wEAAdIC/wEoAdsC/wFRAXoB2QH/AQAB1wL/AQAB1wL/AQAB
        1wL/AQABogHxAf8EAlAAAS0BPAG7Af8CRgHNAf8CRgHXAf8CRgHhAf8CJgGoDf8CPAHUAf8CRgHgAf8C
        aQHdAf8CBwGwAf8BAAEHAXAB/wwAASsBewErAf8BWQGyAWkB/wFaAbkBbAH/AVsBvgFvAf8BNwF4ATcB
        /wQAAXUB0QGXAf8BWgG8AW4B/wFZAbYBawH/AcYB5wHRAf8gAAFLAkwBjwFhAdgB/gH/AVkB2QL/AVAB
        2AH+Af8BVgF9AdUB/wE/AdUB/gH/ATcB1QL/ATMB1AH+Af8DNQFWVAABXQFnAcoB/wJVAcwB/wJWAdMB
        /wJEAb8V/wJSAdIB/wJWAdEB/wJVAcsB/wEAAQYBcgH/DAABLAGEASwB/wFvAbsBeAH/AXABwAF7Af8B
        PAGLATwB/wwAAZEB0gGfAf8BcAG9AXoB/wFvAbgBdwH/AacB1AGzAf8cAAMEAgUBrgH2Af8BdAHXAv8B
        awHZAf4B/wFvAY8B1wH/AVoB0gH+Af8BUgHQAv8BAgGuAfYB/wQBVAABfAGDAdIB/wJlAc4B/wJgAcsN
        /wJNAbsN/wJlAdEB/wJlAc4B/wEAAQMBdQH/EAABNAGRATQB/wE7AZYBOwH/FAABoQHWAaUB/wGFAccB
        iAH/AYQBwwGGAf8BiQG5AYoB/xwAA0QBeQGPAdcB/gH/AYcB3gL/AYcBoQHaAf8BdgHSAv8BbwHQAf4B
        /wMsAUNYAAGaAZ8B2wH/AnUB0wH/AnUB1QH/AnoB0AX/AnIB1QH/AnYB2gH/AmcByQX/Am8B0QH/AnUB
        1QH/AnUB0wH/AQABAgF4Af8wAAGuAeABrwH/AZsB2AGbAf8BmwHYAZsB/wFSAawBUgH/GAAEAgEFAbMB
        +QH/AaIB3gL/AaABtAHfAf8BkQHUAv8BBQG0AfgB/1wAArgB4wH/AoQB2gH/AoQB3AH/AoUB3QH/AoQB
        3AH/AoUB3wH/AoUB3wH/AoUB3gH/AoMB2wH/AoUB3QH/AoQB3AH/AoQB2gH/AQABAQF7Af8wAAQBAbwB
        8wG8Af8BHwGSAR8B/yAAAzsBYwG9AeAB/gH/AbUB3gL/AcsB5wH9Af8DIwEzXAAC0QHvAf8ClQHlAf8C
        lQHlAf8ClQHmAf8ClQHmAf8ClQHmAf8ClQHmAf8ClQHmAf8ClQHmAf8ClQHlAf8ClQHlAf8ClQHlAf8C
        PAGdAf80AAMMAQ8kAAQBAQcBpwH3Af8B0AHnAv8BBwGnAfgB/2AAAtAB6AH/AuQB9wH/AuQB9wH/AuQB
        9wH/AuQB9wH/AuQB9wH/AuQB9wH/AuQB9wH/AuQB9wH/AuQB9wH/AuQB9wH/AuQB9wH/ArgB3QH/YAAD
        JAE1AYkB2AH8Af8DFQEc/wD/AFoAAUIBTQE+BwABPgMAASgDAAFAAwABEAMAAQEBAAEBBQABgBcAA/8B
        AAT/AcABAQIAAcABAQL/AYADAAHAAQEC/wGAAwABwAEBAfwB/wHAAQECAAHAAQEB+AF/AcABAQIAAcAB
        AQHwAT8B4AEDAgABwAEBAeABHwHgAQMCAAHAAQEBwQEPAfABBwIAAcABAQHDAYcB8AEHAgABwAEBAecB
        wwH4AQ8CAAHAAQEB/wHhAfgBHwIAAcABAQH/AeMB/AEfAgABwAEBAf8B9wH8AT8CAAHAAQEC/wH+AT8C
        AAb/AgAG/wIACw==
</value>
  </data>
</root>